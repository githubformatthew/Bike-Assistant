---
openapi: 3.0.0
info:
  title: Bike Assistant
  description: API Documentation
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/uofcengo/BikeAssistance/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://engo651-arash-mozhdehi.herokuapp.com/
  description: Bike Assistant
tags:
- name: user
  description: Operations about user
- name: destination
  description: Everything about destination
paths:
  /api/signin:
    get:
      tags:
      - user
      summary: Signing in to the account.
      description: Allows the user to login into his/her account and provide the frontend with token for authorized API access in the future.
      operationId: signin
      parameters:
      - name: username
        in: query
        description: The account username.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: amozhdehi
      - name: password
        in: query
        description: The password for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: password
          example: d033e22ae348aeb5660fc2140aec35850c4da997
      responses:
        "200":
          description: User signed in successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SignIn'
        "401":
          description: Incorrect login
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncorrectToken'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
  /api/signout:
    get:
      tags:
      - user
      summary: Sign the user out of the system.
      description: Allows the user logout of his or her account and delete the corresponding from the DB.
      operationId: signout
      parameters:
      - name: token
        in: query
        description: The corresponding token.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: e94c3f3ade2a92b39dddebb1f142fae0
      responses:
        "200":
          description: Signed out successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Success'
        "401":
          description: Incorrect login
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncorrectToken'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
  /api/signup:
    get:
      tags:
      - user
      summary: Creates an account in the system.
      description: Allow user to register an account with Firstname, Lastname and weight, as well as a combination of username and password for authenticating the user in the future upon logging in to user account
      operationId: signup
      parameters:
      - name: fname
        in: query
        description: The user's first name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Arash
      - name: lname
        in: query
        description: The user's last name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Mozhdehi
      - name: password
        in: query
        description: The password chosen by the user for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: password
          example: d033e22ae348aeb5660fc2140aec35850c4da997
      - name: weight
        in: query
        description: The weight of user.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 51.5
      - name: username
        in: query
        description: The username chosen by the user for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: amozhdehi
      responses:
        "200":
          description: Signup successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Success'
        "401":
          description: User already existed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAlreadyExist'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
  /api/destinations_feedbacks:
    get:
      tags:
      - destination
      summary: Returns a list of feedbacks.
      description: Destination's feedbacks as well as the average rating of the place and the number of the users voted for this place.
      operationId: destinations_feedbacks
      parameters:
      - name: token
        in: query
        description: The token allocated to the signed in user upon logging in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: e94c3f3ade2a92b39dddebb1f142fae0
      - name: lat
        in: query
        description: The latitude of the destination.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 51.0814
      - name: lng
        in: query
        description: The longitude of the destination.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: -114.14302
      - name: type
        in: query
        description: The type of the destination. (eg. historical, event, bike park, or parking lot for bikes)
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: historical
      - name: username
        in: query
        description: The username chosen by the user for the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ArashMozhedehi
      - name: name
        in: query
        description: The name of the destination.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Nose Hill Park
      responses:
        "200":
          description: Successfully returning of the list of feedback
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuccessFeedback'
        "401":
          description: Incorrect token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncorrectToken'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
  /api/gototoilet:
    get:
      tags:
      - destination
      summary: Returns the best toilet's location
      description: With the explanation and exploitation of 0.5 it finds highest rated toilet with a radius chosen by the user.
      operationId: gototoilet
      parameters:
      - name: token
        in: query
        description: The token allocated to the signed in user upon logging in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: e94c3f3ade2a92b39dddebb1f142fae0
      - name: lat
        in: query
        description: The latitude of the current location of the user.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 51.4430355
      - name: lng
        in: query
        description: The longitude of the current location of the user.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: -114.8121883
      - name: radius
        in: query
        description: The radius that the application should consider for finding a toilet.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 50
      responses:
        "200":
          description: Returning of the location of the toilet
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuccessLocation'
        "401":
          description: Incorrect token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncorrectToken'
        "404":
          description: There is no place within the radius
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotFound'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
  /api/gotowater:
    get:
      tags:
      - destination
      summary: Returns the best water fountain's location.
      description: With the explanation and exploitation of 0.5 it finds highest rated water fountain with a radius chosen by the user.
      operationId: gotowater
      parameters:
      - name: token
        in: query
        description: The token allocated to the signed in user upon logging in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: e94c3f3ade2a92b39dddebb1f142fae0
      - name: lat
        in: query
        description: The latitude of the current location of the user.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 51.4430355
      - name: lng
        in: query
        description: The longitude of the current location of the user.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: -114.8121883
      - name: radius
        in: query
        description: The radius that the application should consider for finding a water fountain.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 50
      responses:
        "200":
          description: Returning of the location of the water fountain
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuccessLocation'
        "401":
          description: Incorrect token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncorrectToken'
        "404":
          description: There is no place within the radius
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotFound'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
  /api/gotobench:
    get:
      tags:
      - destination
      summary: Returns the best bench's location.
      description: With the explanation and exploitation of 0.5 it finds highest rated bench with a radius chosen by the user.
      operationId: gotobench
      parameters:
      - name: token
        in: query
        description: The token allocated to the signed in user upon logging in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: e94c3f3ade2a92b39dddebb1f142fae0
      - name: lat
        in: query
        description: The latitude of the current location of the user.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 51.4430355
      - name: lng
        in: query
        description: The longitude of the current location of the user.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: -114.8121883
      - name: radius
        in: query
        description: The radius that the application should consider for finding a bench.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 50
      responses:
        "200":
          description: Returning of the location of the bench
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuccessLocation'
        "401":
          description: Incorrect token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncorrectToken'
        "404":
          description: There is no place within the radius
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotFound'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
  /api/benchfeedback:
    get:
      tags:
      - destination
      summary: Receives the user's feedback for the corresponding bench.
      description: Receives the user's feedback for the corresponding bench and insert it in the database to be used by the application for the suggesting to users in future.
      operationId: benchfeedback
      parameters:
      - name: token
        in: query
        description: The token allocated to the signed in user upon logging in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: e94c3f3ade2a92b39dddebb1f142fae0
      - name: lat
        in: query
        description: The latitude of the bench.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 51.4430355
      - name: lng
        in: query
        description: The longitude of the bench.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: -114.8121883
      - name: rate
        in: query
        description: The user's rating for the bench.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 2.5
      responses:
        "200":
          description: Successfully added the feedback
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Success'
        "401":
          description: Incorrect token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncorrectToken'
        "403":
          description: Already submitted feedback on the bench
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitted'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
  /api/toiletfeedback:
    get:
      tags:
      - destination
      summary: Receives the user's feedback for the corresponding toilet
      description: Receives user's feedback for the corresponding toilet and insert it in the database to be used by the application for the suggesting to users in the future.
      operationId: toiletfeedback
      parameters:
      - name: token
        in: query
        description: The token allocated to the signed in user upon logging in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: e94c3f3ade2a92b39dddebb1f142fae0
      - name: lat
        in: query
        description: The latitude of the toilet.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 51.4430355
      - name: lng
        in: query
        description: The longitude of the toilet.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: -114.8121883
      - name: rate
        in: query
        description: The user's rating for the toilet.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 2.5
      responses:
        "200":
          description: Successfully added the feedback
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Success'
        "401":
          description: Incorrect token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncorrectToken'
        "403":
          description: Already submitted feedback on the toilet
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitted'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
  /api/waterfeedback:
    get:
      tags:
      - destination
      summary: Receives the user's feedback for the corresponding water fountain.
      description: Receives user's feedback for the corresponding water fountain and insert it in the database to be used by the application for the suggesting to users in future.
      operationId: waterfeedback
      parameters:
      - name: token
        in: query
        description: The token allocated to the signed in user upon logging in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: e94c3f3ade2a92b39dddebb1f142fae0
      - name: lat
        in: query
        description: The latitude of the water fountain.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 51.4430355
      - name: lng
        in: query
        description: The longitude of the water fountain.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: -114.8121883
      - name: rate
        in: query
        description: The user's rating for the water fountain.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 2.5
      responses:
        "200":
          description: Successfully added the feedback
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Success'
        "401":
          description: Incorrect token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncorrectToken'
        "403":
          description: Already submitted feedback on the water fountain
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitted'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
  /api/changepassword:
    get:
      tags:
      - user
      summary: Changing the password for the corresponding account.
      description: Receives the new password from the user and updates the password for the corresponding account.
      operationId: changepassword
      parameters:
      - name: token
        in: query
        description: The token allocated to the signed in user upon logging in
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: e94c3f3ade2a92b39dddebb1f142fae0
      - name: password
        in: query
        description: The password chosen by the user
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: password
          example: Password123
      responses:
        "200":
          description: Successfully changed the password
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Success'
        "401":
          description: Incorrect token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncorrectToken'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
  /api/changeweight:
    get:
      tags:
      - user
      summary: Updating the weight of the user.
      description: Receives the new weight of the user from the user and updates it in the Database.
      operationId: changeweight
      parameters:
      - name: token
        in: query
        description: The token allocated to the signed in user upon logging in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: e94c3f3ade2a92b39dddebb1f142fae0
      - name: weight
        in: query
        description: The new weight entered by the user.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 50.5
      responses:
        "200":
          description: Successfully updating the weight of the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Success'
        "401":
          description: Incorrect token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncorrectToken'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
  /api/feedback:
    post:
      tags:
      - destination
      summary: Gives feedback to the place
      description: Receives feedback from the user and insert it in the Database's "dst_feedbacks" table.
      operationId: feedback
      parameters:
      - name: token
        in: query
        description: The token allocated to the signed in user upon logging in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: e94c3f3ade2a92b39dddebb1f142fae0
      - name: lat
        in: query
        description: The latitude of the place. (e.g. historical, event, bike park, or parking lot for bikes)
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 51.4430355
      - name: lng
        in: query
        description: The longitude of the place. (e.g. historical, event, bike park, or parking lot for bikes)
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: -114.8121883
      - name: name
        in: query
        description: The name of the corresponding place of event.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: St. Andrew's United Church
      - name: type
        in: query
        description: The type of the place. (e.g. historical, event, bike park, or parking lot for bikes)
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: historical
      - name: rate
        in: query
        description: The rating that user gave to this place.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 2.5
      - name: comment
        in: query
        description: The user comment on the corresponding place.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: Nice place
      responses:
        "200":
          description: Successfully adding the feedback and comment
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Success'
        "401":
          description: Incorrect token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncorrectToken'
        "403":
          description: Already submitted feedback on the place
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submitted'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
  /api/location_update:
    get:
      tags:
      - user
      summary: Receives user's new location
      description: Receives the user's new location and insert it in the Database to be used by the application for statistical analysis on the user's activity and representing it to the user in the future.
      operationId: location_update
      parameters:
      - name: token
        in: query
        description: The token allocated to the signed in user upon logging in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: e94c3f3ade2a92b39dddebb1f142fae0
      - name: lat
        in: query
        description: The latitude of the current location of the user.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 51.4430355
      - name: lng
        in: query
        description: The longitude of the current location of the user.
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: -114.8121883
      responses:
        "200":
          description: Successfully insert the current location of the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Success'
        "401":
          description: Incorrect token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncorrectToken'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
  /api/get_stats:
    get:
      tags:
      - user
      summary: Get user statistics
      description: Returns the values for the amount of kilo calories burned by the user during the last 7 days and the average kilo calories burned during the last 30 days.
      operationId: get_stats
      parameters:
      - name: token
        in: query
        description: The token allocated to the signed in user upon logging in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: e94c3f3ade2a92b39dddebb1f142fae0
      responses:
        "200":
          description: Successfully return the requested statistical analysis
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuccessStats'
        "401":
          description: Incorrect login
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncorrectLogin'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
  /api/get_range_stats:
    get:
      tags:
      - user
      summary: Get user range statistics
      description: Returns the values for the average and aggregated as well as the individual amount of Calories that user burn during the period given.
      operationId: get_range_stats
      parameters:
      - name: token
        in: query
        description: The token allocated to the signed in user upon logging in.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: e94c3f3ade2a92b39dddebb1f142fae0
      - name: start
        in: query
        description: The starting date for the query.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date
          example: 2022-04-01
      - name: end
        in: query
        description: The finishing date for the query.
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date
          example: 2022-04-06
      responses:
        "200":
          description: Successfully returned the requested statistical analysis
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuccessStatsRange'
        "401":
          description: Incorrect login
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncorrectLogin'
        "500":
          description: Error encounter while processing the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalServerError'
components:
  schemas:
    SignIn:
      required:
      - f_name
      - l_name
      - message
      - token
      type: object
      properties:
        message:
          type: string
          example: success
        f_name:
          type: string
          example: Arash
        l_name:
          type: string
          example: Mozhdehi
        token:
          type: string
          example: e94c3f3ade2a92b39dddebb1f142fae0
    IncorrectToken:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          example: Incorrect token
    InternalServerError:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          example: Error encountered unable to connect to the database.
    Success:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          example: success
    UserAlreadyExist:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          example: User already exist
    SuccessFeedback:
      required:
      - feedbacks
      - message
      - rate
      - votes
      type: object
      properties:
        message:
          type: string
          example: success
        rate:
          type: number
          format: double
          example: 2.5
        votes:
          type: integer
          format: int32
          example: 120
        feedbacks:
          $ref: '#/components/schemas/feedbacks'
    feedbacks:
      required:
      - feedback
      - rate
      type: object
      properties:
        rate:
          type: number
          format: double
          example: 3
        feedback:
          type: string
          example: Average Place.
    SuccessLocation:
      required:
      - lat
      - lng
      - message
      type: object
      properties:
        message:
          type: string
          example: success
        lat:
          type: number
          format: double
          example: 51.4430356
        lng:
          type: number
          format: double
          example: -114.8121884
    NotFound:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          example: there is no place
    SuccessStats:
      required:
      - message
      - monthly
      - weekly
      type: object
      properties:
        message:
          type: string
          example: success
        weekly:
          type: number
          format: double
        monthly:
          type: number
          format: double
          example: 15000
    IncorrectLogin:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          example: Incorrect login
    Submitted:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          example: Error
    SuccessStatsRange:
      required:
      - average
      - data
      - days
      - message
      - total
      type: object
      properties:
        message:
          type: string
          example: success
        days:
          type: integer
          format: int32
          example: 6
        data:
          type: array
          items:
            type: integer
        average:
          type: number
          format: double
          example: 1457.16
        total:
          type: number
          format: double
          example: 8743
